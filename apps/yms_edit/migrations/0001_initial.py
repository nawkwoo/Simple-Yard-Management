# Generated by Django 4.2.17 on 2024-12-17 00:50

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="Division",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("is_active", models.BooleanField(default=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "name",
                    models.CharField(
                        max_length=3,
                        unique=True,
                        validators=[
                            django.core.validators.RegexValidator(
                                message="Division name must be 2-3 uppercase letters.",
                                regex="^[A-Z]{2,3}$",
                            )
                        ],
                    ),
                ),
                ("full_name", models.CharField(max_length=50)),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="Site",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("is_active", models.BooleanField(default=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "equipment_type",
                    models.CharField(
                        choices=[
                            ("Truck", "Truck"),
                            ("Chassis", "Chassis"),
                            ("Container", "Container"),
                            ("Trailer", "Trailer"),
                        ],
                        help_text="사이트에 배치할 장비의 유형",
                        max_length=10,
                    ),
                ),
                (
                    "capacity",
                    models.PositiveIntegerField(help_text="사이트의 최대 수용 용량"),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="Yard",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("is_active", models.BooleanField(default=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "yard_id",
                    models.CharField(
                        help_text="예시: YD01 (야드 ID는 YD로 시작하고 두 자리 숫자로 구성됩니다.)",
                        max_length=5,
                        unique=True,
                        validators=[
                            django.core.validators.RegexValidator(
                                message="Yard ID must follow format: 2 letters + 2 digits.",
                                regex="^[A-Z]{2}\\d{2}$",
                            )
                        ],
                    ),
                ),
                ("address", models.CharField(blank=True, max_length=255, null=True)),
                ("latitude", models.FloatField(blank=True, null=True)),
                ("longitude", models.FloatField(blank=True, null=True)),
                (
                    "division",
                    models.ForeignKey(
                        help_text="야드가 속한 디비전",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="yards",
                        to="yms_edit.division",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="YardInventory",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "equipment_type",
                    models.CharField(
                        help_text="장비의 유형 (Truck, Chassis, etc.)", max_length=10
                    ),
                ),
                (
                    "equipment_id",
                    models.CharField(
                        help_text="장비의 고유 ID", max_length=15, unique=True
                    ),
                ),
                (
                    "is_available",
                    models.BooleanField(
                        default=True, help_text="장비의 사용 가능 여부"
                    ),
                ),
                (
                    "position",
                    models.IntegerField(blank=True, help_text="추가적인 정보"),
                ),
                (
                    "yard",
                    models.ForeignKey(
                        help_text="장비가 속한 야드",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="inventory",
                        to="yms_edit.yard",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Truck",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("is_active", models.BooleanField(default=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "serial_number",
                    models.CharField(
                        help_text="장비의 고유 일련번호", max_length=15, unique=True
                    ),
                ),
                (
                    "image",
                    models.ImageField(
                        blank=True,
                        help_text="장비의 이미지",
                        null=True,
                        upload_to="equipment_images/",
                    ),
                ),
                (
                    "is_occupied",
                    models.BooleanField(default=False, help_text="장비의 점유 여부"),
                ),
                (
                    "truck_id",
                    models.CharField(
                        help_text="예시: 1234 (4자리 숫자)",
                        max_length=4,
                        unique=True,
                        validators=[
                            django.core.validators.RegexValidator(
                                message="Truck ID must be 4 digits.", regex="^\\d{4}$"
                            )
                        ],
                    ),
                ),
                (
                    "site",
                    models.ForeignKey(
                        help_text="장비가 배치될 사이트",
                        on_delete=django.db.models.deletion.CASCADE,
                        to="yms_edit.site",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="Trailer",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("is_active", models.BooleanField(default=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "serial_number",
                    models.CharField(
                        help_text="장비의 고유 일련번호", max_length=15, unique=True
                    ),
                ),
                (
                    "image",
                    models.ImageField(
                        blank=True,
                        help_text="장비의 이미지",
                        null=True,
                        upload_to="equipment_images/",
                    ),
                ),
                (
                    "is_occupied",
                    models.BooleanField(default=False, help_text="장비의 점유 여부"),
                ),
                (
                    "trailer_id",
                    models.CharField(
                        help_text="예시: ABCD123456 (4개의 대문자 + 6개의 숫자)",
                        max_length=10,
                        unique=True,
                        validators=[
                            django.core.validators.RegexValidator(
                                message="Trailer ID must be 4 letters followed by 6 digits.",
                                regex="^[A-Z]{4}\\d{6}$",
                            )
                        ],
                    ),
                ),
                (
                    "size",
                    models.CharField(
                        choices=[("53", "53"), ("48", "48")],
                        help_text="트레일러의 크기",
                        max_length=4,
                    ),
                ),
                (
                    "site",
                    models.ForeignKey(
                        help_text="장비가 배치될 사이트",
                        on_delete=django.db.models.deletion.CASCADE,
                        to="yms_edit.site",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.AddField(
            model_name="site",
            name="yard",
            field=models.ForeignKey(
                help_text="사이트가 속한 야드",
                on_delete=django.db.models.deletion.CASCADE,
                related_name="sites",
                to="yms_edit.yard",
            ),
        ),
        migrations.CreateModel(
            name="Container",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("is_active", models.BooleanField(default=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "serial_number",
                    models.CharField(
                        help_text="장비의 고유 일련번호", max_length=15, unique=True
                    ),
                ),
                (
                    "image",
                    models.ImageField(
                        blank=True,
                        help_text="장비의 이미지",
                        null=True,
                        upload_to="equipment_images/",
                    ),
                ),
                (
                    "is_occupied",
                    models.BooleanField(default=False, help_text="장비의 점유 여부"),
                ),
                (
                    "container_id",
                    models.CharField(
                        help_text="예시: ABCD1234567 (4개의 대문자 + 7개의 숫자)",
                        max_length=11,
                        unique=True,
                        validators=[
                            django.core.validators.RegexValidator(
                                message="Container ID must be 4 letters followed by 7 digits.",
                                regex="^[A-Z]{4}\\d{7}$",
                            )
                        ],
                    ),
                ),
                (
                    "size",
                    models.CharField(
                        choices=[
                            ("40ST", "40ST"),
                            ("40HC", "40HC"),
                            ("20ST", "20ST"),
                            ("45HC", "45HC"),
                        ],
                        help_text="컨테이너의 크기",
                        max_length=5,
                    ),
                ),
                (
                    "type",
                    models.CharField(
                        choices=[
                            ("Dry", "Dry"),
                            ("Reefer", "Reefer"),
                            ("Flat Rack", "Flat Rack"),
                            ("ISO Tank", "ISO Tank"),
                            ("Open Top", "Open Top"),
                            ("Try Door", "Try Door"),
                        ],
                        help_text="컨테이너의 유형",
                        max_length=10,
                    ),
                ),
                (
                    "site",
                    models.ForeignKey(
                        help_text="장비가 배치될 사이트",
                        on_delete=django.db.models.deletion.CASCADE,
                        to="yms_edit.site",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="Chassis",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("is_active", models.BooleanField(default=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "serial_number",
                    models.CharField(
                        help_text="장비의 고유 일련번호", max_length=15, unique=True
                    ),
                ),
                (
                    "image",
                    models.ImageField(
                        blank=True,
                        help_text="장비의 이미지",
                        null=True,
                        upload_to="equipment_images/",
                    ),
                ),
                (
                    "is_occupied",
                    models.BooleanField(default=False, help_text="장비의 점유 여부"),
                ),
                (
                    "chassis_id",
                    models.CharField(
                        help_text="예시: ABCD (4개의 대문자)",
                        max_length=4,
                        unique=True,
                        validators=[
                            django.core.validators.RegexValidator(
                                message="Chassis ID must be 4 uppercase letters.",
                                regex="^[A-Z]{4}$",
                            )
                        ],
                    ),
                ),
                (
                    "type",
                    models.CharField(
                        choices=[
                            ("Regular", "Regular"),
                            ("Light", "Light"),
                            ("Tandem", "Tandem"),
                            ("Tri Axle", "Tri Axle"),
                        ],
                        help_text="샤시의 유형",
                        max_length=10,
                    ),
                ),
                (
                    "site",
                    models.ForeignKey(
                        help_text="장비가 배치될 사이트",
                        on_delete=django.db.models.deletion.CASCADE,
                        to="yms_edit.site",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
    ]
